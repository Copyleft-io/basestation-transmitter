#!/usr/bin/env node
var pm2 = require('pm2');

var app_name = 'basestation-transmitter';
var startOptions = {
    script: __dirname+'/index.js',
    name: app_name,
    exec_mode: 'fork',
    instances: 1,
    max_memory_restart: '100M'
};

pm2.connect(function() {
	switch (process.argv[2]) {
		case 'start':
			pm2.start(startOptions, function(err, apps) {
				if (err != null) {
					console.log(err.msg);
				} else {
					console.log(app_name+' started');
				}
				return pm2.disconnect();
			});
			break;

		case 'stop':
			return pm2.stop(app_name, function(err, proc) {
				if (err !== null) {
					console.log(err.msg);
				} else {
					console.log(app_name+' stopped');
				}
				return pm2.disconnect();
			});
			break;

		case 'restart':
			pm2.stop(app_name, function(err, proc) {
				if (err !== null) {
					console.log(err.msg);
				} else {
					console.log(app_name+' stopped');
                    pm2.start(startOptions, function(err, apps) {
                        if (err != null) {
                            console.log(err.msg);
                        } else {
                            console.log(app_name+' started');
                        }
                        return pm2.disconnect();
                    });
				}
			});
			break;

		case 'status':
			return pm2.describe(app_name, function(err, proc) {
				var found, i, len, p;
				for (i = 0, len = proc.length; i < len; i++) {
					p = proc[i];
					if (p.name === app_name && p.pid !== 0) {
						found = true;
						console.log('Transmitter is running. Process ' + p.pid);
					}
				}
				if (!found) {
					console.log('Transmitter is not running');
				}
				return pm2.disconnect();
			});
			break;

		default:
			return console.log('Usage: [start|stop|status|restart]');
	}
});
